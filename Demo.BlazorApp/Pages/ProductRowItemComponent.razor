﻿@using Demo.ApiClient1.Models.ApiModels;

@if (ProductRowItem is not null)
{
    <tr>
        @if (!isEditMode)
        {
            <td>@ProductRowItem.ProductDescription</td>
            <td>@ProductRowItem.ProductName</td>
            <td>@ProductRowItem.ProductPrice</td>
            <td>
                <a @onclick="() => isEditMode = true" href="javascript:void(0)">Edit</a>
                <a @onclick="async () => await OnDelete.InvokeAsync(ProductRowItem.id)" href="javascript:void(0)">Delete</a>
            </td>
        }
        else
        {
            <td>
                <input @bind="ProductRowItem.ProductDescription" class="form-control" />
            </td>
            <td>
                <input @bind="ProductRowItem.ProductName" class="form-control" />
            </td>
            <td>
                <input @bind="ProductRowItem.ProductPrice" class="form-control" />
            </td>
            <td>
                <a @onclick="Update" href="javascript:void(0)">Save</a>
                <a @onclick="() => isEditMode = false" href="javascript:void(0)">Cancel</a>
            </td>
        }
    </tr>
}

@code {
    [Parameter]
    public Product? ProductRowItem { get; set; }

    [Parameter]
    public EventCallback<Product> OnEdit { get; set; }

    [Parameter]
    public EventCallback<int> OnDelete { get; set; }

    private bool isEditMode = false;

    private async Task Update()
    {
        await OnEdit.InvokeAsync(ProductRowItem);
        isEditMode = false;
    }
}